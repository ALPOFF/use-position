{"version":3,"file":"main.172b1ac7326ec24d7d29.bundle.js","sources":["webpack:///./src/usePosition.js"],"sourcesContent":["import {useState, useEffect} from 'react';\n\nconst settings = {\n  enableHighAccuracy: false,\n  timeout: Infinity,\n  maximumAge: 0,\n};\n\nexport const usePosition = (watch = false) => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({coords, timestamp}) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      accuracy: coords.accuracy,\n      timestamp,\n    });\n  };\n\n  const onError = (error) => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    const geo = navigator.geolocation;\n    if (!geo) {\n      setError(new Error('Geolocation is not supported'));\n      return;\n    }\n\n    let watcher = null;\n    if (watch) {\n      watcher = geo.watchPosition(onChange, onError, settings);\n    } else {\n      geo.getCurrentPosition(onChange, onError, settings);\n    }\n    \n    return () => watcher && geo.clearWatch(watcher);\n  }, [settings]);\n\n  return { ...position, error };\n};\n"],"mappings":"AAEA","sourceRoot":""}